"""Initial Monster Rancher database structure

Revision ID: 45397dca23f2
Revises: 
Create Date: 2025-08-04 19:04:41.651543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '45397dca23f2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dungeons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.Enum('ENTRY_LEVEL', 'MID_LEVEL', 'SENIOR_LEVEL', 'EXECUTIVE', 'C_SUITE', name='dungeondifficulty'), nullable=False),
    sa.Column('dungeon_type', sa.Enum('CLIENT_MEETING', 'QUARTERLY_REVIEW', 'CRISIS_MANAGEMENT', 'TEAM_BUILDING', 'INNOVATION_SPRINT', 'STAKEHOLDER_NEGOTIATION', name='dungeontype'), nullable=False),
    sa.Column('recommended_level', sa.Integer(), nullable=True),
    sa.Column('max_team_size', sa.Integer(), nullable=True),
    sa.Column('min_team_size', sa.Integer(), nullable=True),
    sa.Column('required_guild_level', sa.Integer(), nullable=True),
    sa.Column('unlock_conditions', sa.JSON(), nullable=True),
    sa.Column('base_experience_reward', sa.Integer(), nullable=True),
    sa.Column('base_gold_reward', sa.Integer(), nullable=True),
    sa.Column('possible_loot', sa.JSON(), nullable=True),
    sa.Column('first_clear_bonus', sa.JSON(), nullable=True),
    sa.Column('stat_requirements', sa.JSON(), nullable=True),
    sa.Column('phases', sa.JSON(), nullable=True),
    sa.Column('special_mechanics', sa.JSON(), nullable=True),
    sa.Column('background_image', sa.String(), nullable=True),
    sa.Column('ambient_music', sa.String(), nullable=True),
    sa.Column('corporate_setting', sa.String(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_daily_special', sa.Boolean(), nullable=True),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('total_completions', sa.Integer(), nullable=True),
    sa.Column('average_completion_time', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dungeons_id'), 'dungeons', ['id'], unique=False)
    op.create_index(op.f('ix_dungeons_slug'), 'dungeons', ['slug'], unique=True)
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('equipment_type', sa.Enum('CERTIFICATION', 'SOFTWARE_LICENSE', 'NETWORKING_TOOL', 'PRODUCTIVITY_SUITE', 'LEADERSHIP_BADGE', 'WELLNESS_PERK', name='equipmenttype'), nullable=False),
    sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'EPIC', 'LEGENDARY', name='equipmentrarity'), nullable=True),
    sa.Column('stat_bonuses', sa.JSON(), nullable=True),
    sa.Column('special_effects', sa.JSON(), nullable=True),
    sa.Column('required_level', sa.Integer(), nullable=True),
    sa.Column('required_corporate_class', sa.String(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('base_cost', sa.Integer(), nullable=True),
    sa.Column('market_value', sa.Integer(), nullable=True),
    sa.Column('maintenance_cost', sa.Integer(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('flavor_text', sa.Text(), nullable=True),
    sa.Column('linkedin_equivalent', sa.String(), nullable=True),
    sa.Column('drop_chance', sa.Integer(), nullable=True),
    sa.Column('dropped_from', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium_only', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_equipment_id'), 'equipment', ['id'], unique=False)
    op.create_table('facilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('facility_type', sa.Enum('TRAINING_ROOM', 'EQUIPMENT_STORAGE', 'WELLNESS_CENTER', 'NETWORKING_LOUNGE', 'STRATEGY_CENTER', 'INNOVATION_LAB', 'CONFERENCE_ROOM', name='facilitytype'), nullable=False),
    sa.Column('max_level', sa.Integer(), nullable=True),
    sa.Column('base_cost', sa.Integer(), nullable=True),
    sa.Column('upgrade_cost_multiplier', sa.Integer(), nullable=True),
    sa.Column('base_effects', sa.JSON(), nullable=True),
    sa.Column('level_scaling', sa.JSON(), nullable=True),
    sa.Column('required_guild_level', sa.Integer(), nullable=True),
    sa.Column('prerequisites', sa.JSON(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('flavor_text', sa.Text(), nullable=True),
    sa.Column('linkedin_equivalent', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_facilities_id'), 'facilities', ['id'], unique=False)
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('player_level', sa.Integer(), nullable=True),
    sa.Column('total_experience', sa.Integer(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_players_email'), 'players', ['email'], unique=True)
    op.create_index(op.f('ix_players_id'), 'players', ['id'], unique=False)
    op.create_index(op.f('ix_players_username'), 'players', ['username'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('corporate_class', sa.Enum('HR_MANAGER', 'CONFLICT_STRATEGIST', 'ETHICS_OFFICER', 'PR_MANAGER', 'SUSTAINABILITY_OFFICER', 'ASSET_MANAGER', 'WELLNESS_COORDINATOR', 'STAKEHOLDER_MANAGER', 'INNOVATION_DIRECTOR', 'PERFORMANCE_COACH', name='corporateclass'), nullable=False),
    sa.Column('seniority_level', sa.Integer(), nullable=True),
    sa.Column('career_experience', sa.Integer(), nullable=True),
    sa.Column('current_position', sa.String(), nullable=True),
    sa.Column('professional_summary', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('personal_brand', sa.Integer(), nullable=True),
    sa.Column('bandwidth', sa.Integer(), nullable=True),
    sa.Column('synergy', sa.Integer(), nullable=True),
    sa.Column('growth_mindset', sa.Integer(), nullable=True),
    sa.Column('agility', sa.Integer(), nullable=True),
    sa.Column('optics', sa.Integer(), nullable=True),
    sa.Column('core_competencies', sa.JSON(), nullable=True),
    sa.Column('professional_toolkit', sa.JSON(), nullable=True),
    sa.Column('career_achievements', sa.JSON(), nullable=True),
    sa.Column('headshot_url', sa.String(), nullable=True),
    sa.Column('banner_color', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_premium_member', sa.Boolean(), nullable=True),
    sa.Column('joined_network', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('profile_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_active', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('dungeon_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('dungeon_id', sa.Integer(), nullable=False),
    sa.Column('team_composition', sa.JSON(), nullable=False),
    sa.Column('team_level_average', sa.Integer(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('completion_time', sa.Integer(), nullable=True),
    sa.Column('final_score', sa.Integer(), nullable=True),
    sa.Column('experience_gained', sa.Integer(), nullable=True),
    sa.Column('gold_earned', sa.Integer(), nullable=True),
    sa.Column('loot_received', sa.JSON(), nullable=True),
    sa.Column('damage_dealt', sa.Integer(), nullable=True),
    sa.Column('healing_done', sa.Integer(), nullable=True),
    sa.Column('synergy_bonus', sa.Integer(), nullable=True),
    sa.Column('critical_successes', sa.Integer(), nullable=True),
    sa.Column('combat_log', sa.JSON(), nullable=True),
    sa.Column('performance_breakdown', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['dungeon_id'], ['dungeons.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dungeon_runs_id'), 'dungeon_runs', ['id'], unique=False)
    op.create_table('guilds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('tagline', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('headquarters', sa.String(), nullable=True),
    sa.Column('company_size', sa.String(), nullable=True),
    sa.Column('guild_level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('reputation_score', sa.Integer(), nullable=True),
    sa.Column('total_dungeons_completed', sa.Integer(), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('influence_points', sa.Integer(), nullable=True),
    sa.Column('logo_url', sa.String(), nullable=True),
    sa.Column('banner_url', sa.String(), nullable=True),
    sa.Column('banner_color', sa.String(), nullable=True),
    sa.Column('core_values', sa.JSON(), nullable=True),
    sa.Column('perks_benefits', sa.JSON(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_recruiting', sa.Boolean(), nullable=True),
    sa.Column('founded_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id')
    )
    op.create_index(op.f('ix_guilds_id'), 'guilds', ['id'], unique=False)
    op.create_index(op.f('ix_guilds_name'), 'guilds', ['name'], unique=True)
    op.create_index(op.f('ix_guilds_slug'), 'guilds', ['slug'], unique=True)
    op.create_table('adventurers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('corporate_class', sa.Enum('HR_MANAGER', 'CONFLICT_STRATEGIST', 'ETHICS_OFFICER', 'PR_MANAGER', 'SUSTAINABILITY_OFFICER', 'ASSET_MANAGER', 'WELLNESS_COORDINATOR', 'STAKEHOLDER_MANAGER', 'INNOVATION_DIRECTOR', 'PERFORMANCE_COACH', name='corporateclass'), nullable=False),
    sa.Column('rarity', sa.Enum('INTERN', 'ASSOCIATE', 'SENIOR', 'PRINCIPAL', 'EXECUTIVE', name='adventurerrarity'), nullable=True),
    sa.Column('current_position', sa.String(), nullable=True),
    sa.Column('professional_summary', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('industry_experience', sa.Integer(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('personal_brand', sa.Integer(), nullable=True),
    sa.Column('bandwidth', sa.Integer(), nullable=True),
    sa.Column('synergy', sa.Integer(), nullable=True),
    sa.Column('growth_mindset', sa.Integer(), nullable=True),
    sa.Column('agility', sa.Integer(), nullable=True),
    sa.Column('optics', sa.Integer(), nullable=True),
    sa.Column('max_health', sa.Integer(), nullable=True),
    sa.Column('current_health', sa.Integer(), nullable=True),
    sa.Column('max_energy', sa.Integer(), nullable=True),
    sa.Column('current_energy', sa.Integer(), nullable=True),
    sa.Column('core_competencies', sa.JSON(), nullable=True),
    sa.Column('certifications', sa.JSON(), nullable=True),
    sa.Column('career_achievements', sa.JSON(), nullable=True),
    sa.Column('headshot_url', sa.String(), nullable=True),
    sa.Column('banner_color', sa.String(), nullable=True),
    sa.Column('personality_traits', sa.JSON(), nullable=True),
    sa.Column('linkedin_style_posts', sa.JSON(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('hire_cost', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('training_points', sa.Integer(), nullable=True),
    sa.Column('last_trained', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dungeons_completed', sa.Integer(), nullable=True),
    sa.Column('total_damage_dealt', sa.Integer(), nullable=True),
    sa.Column('total_healing_done', sa.Integer(), nullable=True),
    sa.Column('team_synergy_bonus', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_active', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adventurers_id'), 'adventurers', ['id'], unique=False)
    op.create_table('guild_facilities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('facility_id', sa.Integer(), nullable=False),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('total_invested', sa.Integer(), nullable=True),
    sa.Column('maintenance_due', sa.DateTime(timezone=True), nullable=True),
    sa.Column('times_used', sa.Integer(), nullable=True),
    sa.Column('total_benefit_provided', sa.Integer(), nullable=True),
    sa.Column('built_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_upgraded', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facilities.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guild_facilities_id'), 'guild_facilities', ['id'], unique=False)
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('DUNGEON_COMPLETION', 'ADVENTURER_RECRUITMENT', 'LEVEL_UP', 'EQUIPMENT_ACQUIRED', 'FACILITY_UPGRADE', 'ACHIEVEMENT_UNLOCKED', 'GUILD_MILESTONE', 'DAILY_REFLECTION', 'ENDORSEMENT', 'CONNECTION_MADE', name='activitytype'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('adventurer_id', sa.Integer(), nullable=True),
    sa.Column('author_name', sa.String(), nullable=True),
    sa.Column('author_title', sa.String(), nullable=True),
    sa.Column('author_avatar', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('shares_count', sa.Integer(), nullable=True),
    sa.Column('related_dungeon_run_id', sa.Integer(), nullable=True),
    sa.Column('related_equipment_id', sa.Integer(), nullable=True),
    sa.Column('related_facility_id', sa.Integer(), nullable=True),
    sa.Column('is_system_generated', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('corporate_template', sa.String(), nullable=True),
    sa.Column('motivational_quote', sa.String(), nullable=True),
    sa.Column('industry_buzzwords', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['adventurer_id'], ['adventurers.id'], ),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['related_dungeon_run_id'], ['dungeon_runs.id'], ),
    sa.ForeignKeyConstraint(['related_equipment_id'], ['equipment.id'], ),
    sa.ForeignKeyConstraint(['related_facility_id'], ['facilities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activities_id'), 'activities', ['id'], unique=False)
    op.create_table('adventurer_equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('adventurer_id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.Column('is_equipped', sa.Boolean(), nullable=True),
    sa.Column('upgrade_level', sa.Integer(), nullable=True),
    sa.Column('acquired_from', sa.String(), nullable=True),
    sa.Column('acquired_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('equipped_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['adventurer_id'], ['adventurers.id'], ),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adventurer_equipment_id'), 'adventurer_equipment', ['id'], unique=False)
    op.create_table('dungeon_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dungeon_run_id', sa.Integer(), nullable=False),
    sa.Column('adventurer_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('experience_gained', sa.Integer(), nullable=True),
    sa.Column('damage_dealt', sa.Integer(), nullable=True),
    sa.Column('healing_done', sa.Integer(), nullable=True),
    sa.Column('performance_rating', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adventurer_id'], ['adventurers.id'], ),
    sa.ForeignKeyConstraint(['dungeon_run_id'], ['dungeon_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dungeon_participants_id'), 'dungeon_participants', ['id'], unique=False)
    op.create_table('activity_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('author_type', sa.String(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('author_name', sa.String(), nullable=False),
    sa.Column('author_avatar', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('is_system_generated', sa.Boolean(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_comments_id'), 'activity_comments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_activity_comments_id'), table_name='activity_comments')
    op.drop_table('activity_comments')
    op.drop_index(op.f('ix_dungeon_participants_id'), table_name='dungeon_participants')
    op.drop_table('dungeon_participants')
    op.drop_index(op.f('ix_adventurer_equipment_id'), table_name='adventurer_equipment')
    op.drop_table('adventurer_equipment')
    op.drop_index(op.f('ix_activities_id'), table_name='activities')
    op.drop_table('activities')
    op.drop_index(op.f('ix_guild_facilities_id'), table_name='guild_facilities')
    op.drop_table('guild_facilities')
    op.drop_index(op.f('ix_adventurers_id'), table_name='adventurers')
    op.drop_table('adventurers')
    op.drop_index(op.f('ix_guilds_slug'), table_name='guilds')
    op.drop_index(op.f('ix_guilds_name'), table_name='guilds')
    op.drop_index(op.f('ix_guilds_id'), table_name='guilds')
    op.drop_table('guilds')
    op.drop_index(op.f('ix_dungeon_runs_id'), table_name='dungeon_runs')
    op.drop_table('dungeon_runs')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_players_username'), table_name='players')
    op.drop_index(op.f('ix_players_id'), table_name='players')
    op.drop_index(op.f('ix_players_email'), table_name='players')
    op.drop_table('players')
    op.drop_index(op.f('ix_facilities_id'), table_name='facilities')
    op.drop_table('facilities')
    op.drop_index(op.f('ix_equipment_id'), table_name='equipment')
    op.drop_table('equipment')
    op.drop_index(op.f('ix_dungeons_slug'), table_name='dungeons')
    op.drop_index(op.f('ix_dungeons_id'), table_name='dungeons')
    op.drop_table('dungeons')
    # ### end Alembic commands ###
