"""Add calendar and daily management system

Revision ID: 77ff2f5bd131
Revises: 45397dca23f2
Create Date: 2025-08-04 19:16:12.238991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '77ff2f5bd131'
down_revision: Union[str, Sequence[str], None] = '45397dca23f2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calendar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('day_name', sa.String(), nullable=True),
    sa.Column('week_number', sa.Integer(), nullable=True),
    sa.Column('month_name', sa.String(), nullable=True),
    sa.Column('day_type', sa.Enum('WEEKDAY', 'WEEKEND', 'HOLIDAY', 'CRISIS', 'OPPORTUNITY', name='daytype'), nullable=True),
    sa.Column('is_special', sa.Boolean(), nullable=True),
    sa.Column('global_event', sa.String(), nullable=True),
    sa.Column('event_description', sa.Text(), nullable=True),
    sa.Column('event_effects', sa.JSON(), nullable=True),
    sa.Column('market_sentiment', sa.String(), nullable=True),
    sa.Column('economic_modifier', sa.Integer(), nullable=True),
    sa.Column('seasonal_effects', sa.JSON(), nullable=True),
    sa.Column('dungeons_available', sa.JSON(), nullable=True),
    sa.Column('special_recruitment', sa.JSON(), nullable=True),
    sa.Column('limited_time_offers', sa.JSON(), nullable=True),
    sa.Column('corporate_theme', sa.String(), nullable=True),
    sa.Column('motivational_quote', sa.String(), nullable=True),
    sa.Column('industry_news', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day_number')
    )
    op.create_index(op.f('ix_calendar_id'), 'calendar', ['id'], unique=False)
    op.create_table('expense_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('ADVENTURER_SALARIES', 'FACILITY_MAINTENANCE', 'GUILD_OVERHEAD', 'TRAINING_COSTS', 'RECRUITMENT_FEES', 'EQUIPMENT_PURCHASE', 'DUNGEON_PREPARATION', 'EMERGENCY_EXPENSES', 'MARKETING', 'INSURANCE', name='expensecategory'), nullable=False),
    sa.Column('expense_type', sa.Enum('FIXED_DAILY', 'VARIABLE_DAILY', 'ACTION_BASED', 'EVENT_TRIGGERED', 'OPTIONAL', name='expensetype'), nullable=False),
    sa.Column('base_cost', sa.Integer(), nullable=True),
    sa.Column('per_adventurer_cost', sa.Integer(), nullable=True),
    sa.Column('per_facility_cost', sa.Integer(), nullable=True),
    sa.Column('minimum_guild_level', sa.Integer(), nullable=True),
    sa.Column('required_facilities', sa.JSON(), nullable=True),
    sa.Column('triggers', sa.JSON(), nullable=True),
    sa.Column('difficulty_scaling', sa.JSON(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('corporate_flavor', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expense_templates_id'), 'expense_templates', ['id'], unique=False)
    op.create_table('game_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.Enum('INTERN', 'ASSOCIATE', 'SENIOR', 'EXECUTIVE', name='difficultylevel'), nullable=True),
    sa.Column('target_money', sa.Integer(), nullable=True),
    sa.Column('starting_money', sa.Integer(), nullable=True),
    sa.Column('current_day', sa.Integer(), nullable=True),
    sa.Column('current_money', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'WON', 'LOST_BANKRUPT', 'ABANDONED', name='gamerunstatus'), nullable=True),
    sa.Column('base_daily_costs', sa.JSON(), nullable=True),
    sa.Column('adventurer_daily_salary', sa.Integer(), nullable=True),
    sa.Column('total_dungeons_completed', sa.Integer(), nullable=True),
    sa.Column('total_income_generated', sa.Integer(), nullable=True),
    sa.Column('total_expenses_paid', sa.Integer(), nullable=True),
    sa.Column('peak_money', sa.Integer(), nullable=True),
    sa.Column('lowest_money', sa.Integer(), nullable=True),
    sa.Column('final_money', sa.Integer(), nullable=True),
    sa.Column('days_survived', sa.Integer(), nullable=True),
    sa.Column('loss_reason', sa.String(), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('major_events', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_played', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_runs_id'), 'game_runs', ['id'], unique=False)
    op.create_table('daily_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_run_id', sa.Integer(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('day_type', sa.Enum('WEEKDAY', 'WEEKEND', 'HOLIDAY', 'CRISIS', 'OPPORTUNITY', name='daytype'), nullable=True),
    sa.Column('special_event', sa.String(), nullable=True),
    sa.Column('weather_effect', sa.String(), nullable=True),
    sa.Column('starting_money', sa.Integer(), nullable=False),
    sa.Column('money_allocated', sa.Integer(), nullable=True),
    sa.Column('actual_money_spent', sa.Integer(), nullable=True),
    sa.Column('ending_money', sa.Integer(), nullable=True),
    sa.Column('primary_action', sa.Enum('DUNGEON_EXPEDITION', 'RECRUIT_ADVENTURER', 'TRAIN_ADVENTURER', 'UPGRADE_FACILITY', 'GUILD_MANAGEMENT', 'REST_DAY', 'MARKET_RESEARCH', name='actiontype'), nullable=False),
    sa.Column('action_details', sa.JSON(), nullable=True),
    sa.Column('action_result', sa.Enum('SUCCESS', 'PARTIAL_SUCCESS', 'FAILURE', 'CRITICAL_SUCCESS', 'CRITICAL_FAILURE', name='actionresult'), nullable=True),
    sa.Column('result_details', sa.JSON(), nullable=True),
    sa.Column('experience_gained', sa.Integer(), nullable=True),
    sa.Column('money_earned', sa.Integer(), nullable=True),
    sa.Column('money_lost', sa.Integer(), nullable=True),
    sa.Column('secondary_actions', sa.JSON(), nullable=True),
    sa.Column('secondary_results', sa.JSON(), nullable=True),
    sa.Column('major_events', sa.JSON(), nullable=True),
    sa.Column('achievements_unlocked', sa.JSON(), nullable=True),
    sa.Column('guild_morale_change', sa.Integer(), nullable=True),
    sa.Column('plan_executed_successfully', sa.Boolean(), nullable=True),
    sa.Column('deviations_from_plan', sa.JSON(), nullable=True),
    sa.Column('day_started', sa.DateTime(timezone=True), nullable=True),
    sa.Column('day_ended', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['game_run_id'], ['game_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_plans_id'), 'daily_plans', ['id'], unique=False)
    op.create_table('daily_expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_run_id', sa.Integer(), nullable=False),
    sa.Column('daily_plan_id', sa.Integer(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('total_expenses', sa.Integer(), nullable=True),
    sa.Column('total_income', sa.Integer(), nullable=True),
    sa.Column('net_change', sa.Integer(), nullable=True),
    sa.Column('adventurer_salaries', sa.Integer(), nullable=True),
    sa.Column('facility_maintenance', sa.Integer(), nullable=True),
    sa.Column('guild_overhead', sa.Integer(), nullable=True),
    sa.Column('action_costs', sa.Integer(), nullable=True),
    sa.Column('emergency_costs', sa.Integer(), nullable=True),
    sa.Column('optional_spending', sa.Integer(), nullable=True),
    sa.Column('dungeon_rewards', sa.Integer(), nullable=True),
    sa.Column('contract_payments', sa.Integer(), nullable=True),
    sa.Column('reputation_bonuses', sa.Integer(), nullable=True),
    sa.Column('equipment_sales', sa.Integer(), nullable=True),
    sa.Column('misc_income', sa.Integer(), nullable=True),
    sa.Column('expense_details', sa.JSON(), nullable=True),
    sa.Column('income_details', sa.JSON(), nullable=True),
    sa.Column('difficulty_modifier', sa.Integer(), nullable=True),
    sa.Column('market_modifier', sa.Integer(), nullable=True),
    sa.Column('seasonal_modifier', sa.Integer(), nullable=True),
    sa.Column('guild_efficiency', sa.Integer(), nullable=True),
    sa.Column('all_expenses_paid', sa.Boolean(), nullable=True),
    sa.Column('unpaid_expenses', sa.Integer(), nullable=True),
    sa.Column('morale_impact', sa.Integer(), nullable=True),
    sa.Column('reputation_impact', sa.Integer(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['daily_plan_id'], ['daily_plans.id'], ),
    sa.ForeignKeyConstraint(['game_run_id'], ['game_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_expenses_id'), 'daily_expenses', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_daily_expenses_id'), table_name='daily_expenses')
    op.drop_table('daily_expenses')
    op.drop_index(op.f('ix_daily_plans_id'), table_name='daily_plans')
    op.drop_table('daily_plans')
    op.drop_index(op.f('ix_game_runs_id'), table_name='game_runs')
    op.drop_table('game_runs')
    op.drop_index(op.f('ix_expense_templates_id'), table_name='expense_templates')
    op.drop_table('expense_templates')
    op.drop_index(op.f('ix_calendar_id'), table_name='calendar')
    op.drop_table('calendar')
    # ### end Alembic commands ###
