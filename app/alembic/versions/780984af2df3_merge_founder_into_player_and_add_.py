"""Merge Founder into Player and add missing bot models

Revision ID: 780984af2df3
Revises: 77ff2f5bd131
Create Date: 2025-08-06 14:39:35.718671

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '780984af2df3'
down_revision: Union[str, Sequence[str], None] = '77ff2f5bd131'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_ceo_personalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('personality_type', sa.Enum('AGGRESSIVE_TRADER', 'CONSERVATIVE_BUILDER', 'SOCIAL_CLIMBER', 'ANALYTICAL_OPTIMIZER', 'CHARISMATIC_LEADER', 'INNOVATION_PIONEER', name='ceopersonalitytype'), nullable=False),
    sa.Column('risk_tolerance', sa.Enum('VERY_LOW', 'LOW', 'MODERATE', 'HIGH', 'VERY_HIGH', name='risktolerance'), nullable=False),
    sa.Column('communication_style', sa.Enum('PROFESSIONAL', 'CASUAL', 'BOASTFUL', 'ANALYTICAL', 'INSPIRATIONAL', 'SARCASTIC', name='communicationstyle'), nullable=False),
    sa.Column('ambition', sa.Integer(), nullable=True),
    sa.Column('patience', sa.Integer(), nullable=True),
    sa.Column('ego', sa.Integer(), nullable=True),
    sa.Column('loyalty', sa.Integer(), nullable=True),
    sa.Column('innovation', sa.Integer(), nullable=True),
    sa.Column('competitiveness', sa.Integer(), nullable=True),
    sa.Column('facility_investment_priority', sa.Integer(), nullable=True),
    sa.Column('recruitment_priority', sa.Integer(), nullable=True),
    sa.Column('training_priority', sa.Integer(), nullable=True),
    sa.Column('dungeon_frequency', sa.Integer(), nullable=True),
    sa.Column('stock_volatility_comfort', sa.Integer(), nullable=True),
    sa.Column('competitive_response_speed', sa.Integer(), nullable=True),
    sa.Column('market_timing_skill', sa.Integer(), nullable=True),
    sa.Column('post_frequency', sa.Integer(), nullable=True),
    sa.Column('posts_about_success', sa.Integer(), nullable=True),
    sa.Column('posts_about_strategy', sa.Integer(), nullable=True),
    sa.Column('posts_about_market', sa.Integer(), nullable=True),
    sa.Column('signature_phrases', sa.JSON(), nullable=True),
    sa.Column('victory_templates', sa.JSON(), nullable=True),
    sa.Column('failure_templates', sa.JSON(), nullable=True),
    sa.Column('strategy_templates', sa.JSON(), nullable=True),
    sa.Column('avatar_emoji', sa.String(), nullable=True),
    sa.Column('banner_color', sa.String(), nullable=True),
    sa.Column('guilds_managed', sa.Integer(), nullable=True),
    sa.Column('average_guild_performance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_ceo_personalities_id'), 'bot_ceo_personalities', ['id'], unique=False)
    op.create_table('game_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('current_day', sa.Integer(), nullable=True),
    sa.Column('current_quarter', sa.Integer(), nullable=True),
    sa.Column('current_year', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.Enum('EASY', 'NORMAL', 'HARD', 'NIGHTMARE', name='gamedifficulty'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_played_at', sa.DateTime(), nullable=True),
    sa.Column('total_playtime_minutes', sa.Integer(), nullable=True),
    sa.Column('daily_action_limit', sa.Integer(), nullable=True),
    sa.Column('starting_gold', sa.Integer(), nullable=True),
    sa.Column('market_volatility', sa.Float(), nullable=True),
    sa.Column('target_guild_rank', sa.String(), nullable=True),
    sa.Column('target_days', sa.Integer(), nullable=True),
    sa.Column('bankruptcy_threshold', sa.Integer(), nullable=True),
    sa.Column('session_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_sessions_id'), 'game_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_game_sessions_player_id'), 'game_sessions', ['player_id'], unique=False)
    op.create_table('bot_guilds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_session_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('ceo_name', sa.String(length=100), nullable=False),
    sa.Column('ceo_title', sa.String(length=100), nullable=True),
    sa.Column('ceo_avatar_emoji', sa.String(length=10), nullable=True),
    sa.Column('gold', sa.Integer(), nullable=True),
    sa.Column('guild_rank', sa.Enum('E', 'D', 'C', 'B', 'A', 'S', name='guildrank'), nullable=True),
    sa.Column('share_price', sa.Float(), nullable=True),
    sa.Column('exp_bank', sa.Integer(), nullable=True),
    sa.Column('personality_type', sa.Enum('AGGRESSIVE_TRADER', 'CONSERVATIVE_BUILDER', 'NETWORKING_ELITE', 'DATA_ANALYST', 'CHARISMATIC_LEADER', 'OPPORTUNISTIC_SHARK', name='botpersonalitytype'), nullable=False),
    sa.Column('current_behavior', sa.Enum('GROWING', 'CONSOLIDATING', 'AGGRESSIVE', 'DEFENSIVE', 'STRUGGLING', 'DOMINANT', name='botbehaviorstate'), nullable=True),
    sa.Column('aggression_level', sa.Float(), nullable=True),
    sa.Column('risk_tolerance', sa.Float(), nullable=True),
    sa.Column('market_focus', sa.Float(), nullable=True),
    sa.Column('total_dungeons_completed', sa.Integer(), nullable=True),
    sa.Column('total_revenue_earned', sa.Integer(), nullable=True),
    sa.Column('consecutive_successful_days', sa.Integer(), nullable=True),
    sa.Column('recent_performance_score', sa.Float(), nullable=True),
    sa.Column('current_strategy', sa.String(length=50), nullable=True),
    sa.Column('last_major_decision', sa.String(length=200), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.Column('post_frequency_days', sa.Integer(), nullable=True),
    sa.Column('last_post_day', sa.Integer(), nullable=True),
    sa.Column('public_reputation', sa.Float(), nullable=True),
    sa.Column('decision_weights', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['game_session_id'], ['game_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_guilds_game_session_id'), 'bot_guilds', ['game_session_id'], unique=False)
    op.create_index(op.f('ix_bot_guilds_id'), 'bot_guilds', ['id'], unique=False)
    op.create_table('bot_market_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_guild_id', sa.Integer(), nullable=False),
    sa.Column('game_session_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.Enum('DUNGEON_BID', 'DUNGEON_COMPLETE', 'FACILITY_UPGRADE', 'ADVENTURER_RECRUIT', 'MARKET_MANIPULATION', 'LINKEDIN_POST', 'STRATEGIC_PARTNERSHIP', name='activitytype'), nullable=False),
    sa.Column('game_day', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('activity_data', sa.JSON(), nullable=True),
    sa.Column('gold_change', sa.Integer(), nullable=True),
    sa.Column('share_price_change', sa.Float(), nullable=True),
    sa.Column('reputation_change', sa.Float(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('shares_count', sa.Integer(), nullable=True),
    sa.Column('was_successful', sa.Boolean(), nullable=True),
    sa.Column('success_score', sa.Float(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('post_generated', sa.Boolean(), nullable=True),
    sa.Column('post_generated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bot_guild_id'], ['bot_guilds.id'], ),
    sa.ForeignKeyConstraint(['game_session_id'], ['game_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_market_activities_bot_guild_id'), 'bot_market_activities', ['bot_guild_id'], unique=False)
    op.create_index(op.f('ix_bot_market_activities_game_session_id'), 'bot_market_activities', ['game_session_id'], unique=False)
    op.create_index(op.f('ix_bot_market_activities_id'), 'bot_market_activities', ['id'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.add_column('adventurers', sa.Column('adventurer_class', sa.Enum('FIGHTER', 'ROGUE', 'MAGE', 'CLERIC', 'ARCHER', 'PALADIN', 'BARBARIAN', 'BARD', 'DRUID', 'MONK', name='adventurerclass'), nullable=False))
    op.add_column('adventurers', sa.Column('strength', sa.Integer(), nullable=True))
    op.add_column('adventurers', sa.Column('dexterity', sa.Integer(), nullable=True))
    op.add_column('adventurers', sa.Column('constitution', sa.Integer(), nullable=True))
    op.add_column('adventurers', sa.Column('intelligence', sa.Integer(), nullable=True))
    op.add_column('adventurers', sa.Column('total_exp_received', sa.Integer(), nullable=True))
    op.add_column('adventurers', sa.Column('last_exp_distribution', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('adventurers', 'rarity',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.Enum('NOVICE', 'JOURNEYMAN', 'EXPERT', 'MASTER', 'LEGENDARY', name='adventurerrarity'),
               existing_nullable=True)
    op.drop_column('adventurers', 'bandwidth')
    op.drop_column('adventurers', 'agility')
    op.drop_column('adventurers', 'corporate_class')
    op.drop_column('adventurers', 'growth_mindset')
    op.drop_column('adventurers', 'personal_brand')
    op.add_column('game_runs', sa.Column('founder_id', sa.Integer(), nullable=False))
    op.add_column('game_runs', sa.Column('end_reason', sa.String(), nullable=True))
    op.add_column('game_runs', sa.Column('guild_sold_for', sa.Integer(), nullable=True))
    op.add_column('game_runs', sa.Column('guild_sale_date', sa.DateTime(timezone=True), nullable=True))
    op.add_column('game_runs', sa.Column('founder_bonuses_snapshot', sa.JSON(), nullable=True))
    op.add_column('game_runs', sa.Column('career_money_earned', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'game_runs', 'players', ['founder_id'], ['id'])
    op.drop_column('game_runs', 'loss_reason')
    op.add_column('guilds', sa.Column('game_session_id', sa.Integer(), nullable=False))
    op.add_column('guilds', sa.Column('share_price', sa.Float(), nullable=True))
    op.add_column('guilds', sa.Column('guild_rank', sa.Enum('E', 'D', 'C', 'B', 'A', 'S', name='guildrank'), nullable=True))
    op.add_column('guilds', sa.Column('shares_outstanding', sa.Integer(), nullable=True))
    op.add_column('guilds', sa.Column('daily_price_change', sa.Float(), nullable=True))
    op.add_column('guilds', sa.Column('weekly_price_change', sa.Float(), nullable=True))
    op.add_column('guilds', sa.Column('all_time_high', sa.Float(), nullable=True))
    op.add_column('guilds', sa.Column('all_time_low', sa.Float(), nullable=True))
    op.add_column('guilds', sa.Column('last_price_update', sa.DateTime(timezone=True), nullable=True))
    op.add_column('guilds', sa.Column('exp_bank', sa.Integer(), nullable=True))
    op.add_column('guilds', sa.Column('exp_reserved', sa.Integer(), nullable=True))
    op.add_column('guilds', sa.Column('exp_interest_rate', sa.Integer(), nullable=True))
    op.add_column('guilds', sa.Column('last_interest_calculation', sa.DateTime(timezone=True), nullable=True))
    op.add_column('guilds', sa.Column('bot_ceo_id', sa.Integer(), nullable=True))
    op.alter_column('guilds', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_guilds_name'), table_name='guilds')
    op.drop_index(op.f('ix_guilds_slug'), table_name='guilds')
    op.create_index(op.f('ix_guilds_game_session_id'), 'guilds', ['game_session_id'], unique=False)
    op.create_unique_constraint(None, 'guilds', ['bot_ceo_id'])
    op.create_foreign_key(None, 'guilds', 'bot_ceo_personalities', ['bot_ceo_id'], ['id'])
    op.create_foreign_key(None, 'guilds', 'game_sessions', ['game_session_id'], ['id'])
    op.drop_column('guilds', 'reputation_score')
    op.add_column('players', sa.Column('corporate_class', sa.Enum('HR_MANAGER', 'PR_MANAGER', 'ASSET_MANAGER', 'WELLNESS_MANAGER', name='corporateclass'), nullable=False))
    op.add_column('players', sa.Column('seniority_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('career_experience', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('current_position', sa.String(), nullable=True))
    op.add_column('players', sa.Column('professional_summary', sa.Text(), nullable=True))
    op.add_column('players', sa.Column('location', sa.String(), nullable=True))
    op.add_column('players', sa.Column('personal_brand', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('bandwidth', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('synergy', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('growth_mindset', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('agility', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('optics', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('core_competencies', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('professional_toolkit', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('career_achievements', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('leadership_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('negotiation_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('vision_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('networking_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('expertise_level', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('career_capital', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('lifetime_guilds_sold', sa.Integer(), nullable=True))
    op.add_column('players', sa.Column('executive_title', sa.String(), nullable=True))
    op.add_column('players', sa.Column('unlocked_specializations', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('unlocked_executive_titles', sa.JSON(), nullable=True))
    op.add_column('players', sa.Column('headshot_url', sa.String(), nullable=True))
    op.add_column('players', sa.Column('banner_color', sa.String(), nullable=True))
    op.add_column('players', sa.Column('is_premium_member', sa.Boolean(), nullable=True))
    op.add_column('players', sa.Column('joined_network', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('players', sa.Column('profile_updated', sa.DateTime(timezone=True), nullable=True))
    op.add_column('players', sa.Column('last_active', sa.DateTime(timezone=True), nullable=True))
    op.drop_column('players', 'updated_at')
    op.drop_column('players', 'last_login')
    op.drop_column('players', 'gold')
    op.drop_column('players', 'player_level')
    op.drop_column('players', 'is_verified')
    op.drop_column('players', 'total_experience')
    op.drop_column('players', 'is_premium')
    op.drop_column('players', 'created_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('players', sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
    op.add_column('players', sa.Column('is_premium', sa.BOOLEAN(), nullable=True))
    op.add_column('players', sa.Column('total_experience', sa.INTEGER(), nullable=True))
    op.add_column('players', sa.Column('is_verified', sa.BOOLEAN(), nullable=True))
    op.add_column('players', sa.Column('player_level', sa.INTEGER(), nullable=True))
    op.add_column('players', sa.Column('gold', sa.INTEGER(), nullable=True))
    op.add_column('players', sa.Column('last_login', sa.DATETIME(), nullable=True))
    op.add_column('players', sa.Column('updated_at', sa.DATETIME(), nullable=True))
    op.drop_column('players', 'last_active')
    op.drop_column('players', 'profile_updated')
    op.drop_column('players', 'joined_network')
    op.drop_column('players', 'is_premium_member')
    op.drop_column('players', 'banner_color')
    op.drop_column('players', 'headshot_url')
    op.drop_column('players', 'unlocked_executive_titles')
    op.drop_column('players', 'unlocked_specializations')
    op.drop_column('players', 'executive_title')
    op.drop_column('players', 'lifetime_guilds_sold')
    op.drop_column('players', 'career_capital')
    op.drop_column('players', 'expertise_level')
    op.drop_column('players', 'networking_level')
    op.drop_column('players', 'vision_level')
    op.drop_column('players', 'negotiation_level')
    op.drop_column('players', 'leadership_level')
    op.drop_column('players', 'career_achievements')
    op.drop_column('players', 'professional_toolkit')
    op.drop_column('players', 'core_competencies')
    op.drop_column('players', 'optics')
    op.drop_column('players', 'agility')
    op.drop_column('players', 'growth_mindset')
    op.drop_column('players', 'synergy')
    op.drop_column('players', 'bandwidth')
    op.drop_column('players', 'personal_brand')
    op.drop_column('players', 'location')
    op.drop_column('players', 'professional_summary')
    op.drop_column('players', 'current_position')
    op.drop_column('players', 'career_experience')
    op.drop_column('players', 'seniority_level')
    op.drop_column('players', 'corporate_class')
    op.add_column('guilds', sa.Column('reputation_score', sa.INTEGER(), nullable=True))
    op.drop_constraint(None, 'guilds', type_='foreignkey')
    op.drop_constraint(None, 'guilds', type_='foreignkey')
    op.drop_constraint(None, 'guilds', type_='unique')
    op.drop_index(op.f('ix_guilds_game_session_id'), table_name='guilds')
    op.create_index(op.f('ix_guilds_slug'), 'guilds', ['slug'], unique=1)
    op.create_index(op.f('ix_guilds_name'), 'guilds', ['name'], unique=1)
    op.alter_column('guilds', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('guilds', 'bot_ceo_id')
    op.drop_column('guilds', 'last_interest_calculation')
    op.drop_column('guilds', 'exp_interest_rate')
    op.drop_column('guilds', 'exp_reserved')
    op.drop_column('guilds', 'exp_bank')
    op.drop_column('guilds', 'last_price_update')
    op.drop_column('guilds', 'all_time_low')
    op.drop_column('guilds', 'all_time_high')
    op.drop_column('guilds', 'weekly_price_change')
    op.drop_column('guilds', 'daily_price_change')
    op.drop_column('guilds', 'shares_outstanding')
    op.drop_column('guilds', 'guild_rank')
    op.drop_column('guilds', 'share_price')
    op.drop_column('guilds', 'game_session_id')
    op.add_column('game_runs', sa.Column('loss_reason', sa.VARCHAR(), nullable=True))
    op.drop_constraint(None, 'game_runs', type_='foreignkey')
    op.drop_column('game_runs', 'career_money_earned')
    op.drop_column('game_runs', 'founder_bonuses_snapshot')
    op.drop_column('game_runs', 'guild_sale_date')
    op.drop_column('game_runs', 'guild_sold_for')
    op.drop_column('game_runs', 'end_reason')
    op.drop_column('game_runs', 'founder_id')
    op.add_column('adventurers', sa.Column('personal_brand', sa.INTEGER(), nullable=True))
    op.add_column('adventurers', sa.Column('growth_mindset', sa.INTEGER(), nullable=True))
    op.add_column('adventurers', sa.Column('corporate_class', sa.VARCHAR(length=22), nullable=False))
    op.add_column('adventurers', sa.Column('agility', sa.INTEGER(), nullable=True))
    op.add_column('adventurers', sa.Column('bandwidth', sa.INTEGER(), nullable=True))
    op.alter_column('adventurers', 'rarity',
               existing_type=sa.Enum('NOVICE', 'JOURNEYMAN', 'EXPERT', 'MASTER', 'LEGENDARY', name='adventurerrarity'),
               type_=sa.VARCHAR(length=9),
               existing_nullable=True)
    op.drop_column('adventurers', 'last_exp_distribution')
    op.drop_column('adventurers', 'total_exp_received')
    op.drop_column('adventurers', 'intelligence')
    op.drop_column('adventurers', 'constitution')
    op.drop_column('adventurers', 'dexterity')
    op.drop_column('adventurers', 'strength')
    op.drop_column('adventurers', 'adventurer_class')
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('display_name', sa.VARCHAR(), nullable=False),
    sa.Column('corporate_class', sa.VARCHAR(length=22), nullable=False),
    sa.Column('seniority_level', sa.INTEGER(), nullable=True),
    sa.Column('career_experience', sa.INTEGER(), nullable=True),
    sa.Column('current_position', sa.VARCHAR(), nullable=True),
    sa.Column('professional_summary', sa.TEXT(), nullable=True),
    sa.Column('location', sa.VARCHAR(), nullable=True),
    sa.Column('personal_brand', sa.INTEGER(), nullable=True),
    sa.Column('bandwidth', sa.INTEGER(), nullable=True),
    sa.Column('synergy', sa.INTEGER(), nullable=True),
    sa.Column('growth_mindset', sa.INTEGER(), nullable=True),
    sa.Column('agility', sa.INTEGER(), nullable=True),
    sa.Column('optics', sa.INTEGER(), nullable=True),
    sa.Column('core_competencies', sqlite.JSON(), nullable=True),
    sa.Column('professional_toolkit', sqlite.JSON(), nullable=True),
    sa.Column('career_achievements', sqlite.JSON(), nullable=True),
    sa.Column('headshot_url', sa.VARCHAR(), nullable=True),
    sa.Column('banner_color', sa.VARCHAR(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_premium_member', sa.BOOLEAN(), nullable=True),
    sa.Column('joined_network', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('profile_updated', sa.DATETIME(), nullable=True),
    sa.Column('last_active', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=1)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=1)
    op.drop_index(op.f('ix_bot_market_activities_id'), table_name='bot_market_activities')
    op.drop_index(op.f('ix_bot_market_activities_game_session_id'), table_name='bot_market_activities')
    op.drop_index(op.f('ix_bot_market_activities_bot_guild_id'), table_name='bot_market_activities')
    op.drop_table('bot_market_activities')
    op.drop_index(op.f('ix_bot_guilds_id'), table_name='bot_guilds')
    op.drop_index(op.f('ix_bot_guilds_game_session_id'), table_name='bot_guilds')
    op.drop_table('bot_guilds')
    op.drop_index(op.f('ix_game_sessions_player_id'), table_name='game_sessions')
    op.drop_index(op.f('ix_game_sessions_id'), table_name='game_sessions')
    op.drop_table('game_sessions')
    op.drop_index(op.f('ix_bot_ceo_personalities_id'), table_name='bot_ceo_personalities')
    op.drop_table('bot_ceo_personalities')
    # ### end Alembic commands ###
